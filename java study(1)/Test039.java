//실행 흐름의 컨트롤(제어문, 조건문과 반복문)
//-반복문 실습
//============================================
/*
반복문의 개요
주어진 조건이 참인 경우
일정 영역의 문장들을 반복 수행하다가
조건식이 거짓이 되는 순간이 오면
반복 수행을 중단하는 문장이다.

이러한 반복문에는 while, do~whild,for문 등이 있다
반복문의 제어를 위해 break, continue문을 사용하는 경우가 있다

○while문

조건식을 먼저 비교하여 조건식의 처리 결과과 참인 경우, 특정 영역을 반복 수행하는 문장으로
반복횟수가 정해져 있지 않은 경우나 반복횟수가 많은 경우 주로 사용한다
while 문은 조건이 맞지 않은 경우
반복은 커녕 단 한 번도 실행되지 않을 수 있다.

○while 문의 형식 및 구조
while(조건식)

*/


public class Test039
{
	public static void main(String[] args)
	{
		
		/*
		int n=0;
		while (n<=10)
		{
			System.out.println("n="+n);
			n++;
		}
		*/

		/*
		int n=0;
		while (n<=10)
		{
			n++;
			System.out.println("n="+n);
		}
		*/
		
		
		/*
		int n=0;
		while (n++<=10) //n에 1씩 더해나간 수가 10이 될때까지
		{
			System.out.println("n="+n); //1~11까지 출력됨
		}
		*/

		
		int n=0;
		while (n++<=10)
		{
			System.out.println("n="+ ++n); //0에서 ++한 2부터 출력☆
		}
		
		

		//1부터 100까지의 합을 계산하여
		//결과를 출력하는 프로그램을 작성하낟
		//단 while 반복문을 사용한다

		//실행 예)
		//1부터 100까지의 합 : 5050
		//계속 하려면 아무 키나 누르세요...
		//System.out.println("1 부터 100까지의 합 :5050");

		/*
		//1부터 차례로 담아 1씩 증가하는 변수 선언 및 초기화
		int n=1;
		//누적합을 계산하여 담아낼 변수 선언 및 초기화
		int sum=0;
		
		//연산 및 처리
		while (n<=100)
		{
			//sum을 n만큼 증가시켜라
			sum +=n;
			//n이 1씩 증가해나가는 연산 필요
			n++;
		
		}
		//결과출력	
		System.out.println("1부터 100까지의 합 : " +sum);
		//출력 구분이 반복문 영역 안에 있으면 출력이 100번 되는거라, 반복문 밖에 있어야 해
		//1부터 1씩 증가할 변수와 누적된 합을 담을 변수가 필요해
*/

		
	    

	}
}